%% calculating similiarity matrix.
function [norm s_matrix] = similiarity_ear(features,n)
    % load('ear_features.mat'); % load the features mat file.
    sim_kernel = zeros(n,n);
    for mm = 1:n
        sim_kernel(mm,:) = exp(-sqrt(sum((repmat(features(mm,:),n,1)-features).^2,2)))';
    end
    %% Normalization
    idx = eye(size(sim_kernel));
    idx2 = 1-idx;
    dia = idx/2;
    n_dia = idx2.*sim_kernel;
    n_dia = n_dia./(2*repmat(sum(n_dia,2),1,n));
    norm = dia+n_dia;
    %% getting sparse matrix using k-nearest neighbour
    sort_norm = sort(norm,2);
    thresh_value = sort_norm(:,n-20); % taking 20-nearest neighbours.
    thresh_matrix = norm > repmat(thresh_value,1,n); % selecting elements greater than threshold.
    n_neighbours = norm.*thresh_matrix;
    s_matrix = n_neighbours./repmat(sum(n_neighbours,2),1,n);
end
